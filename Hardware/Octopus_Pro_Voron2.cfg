# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Hotend heater pin                    [extruder] section
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Stepper Z1 enable pin                [stepper_z1] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section


[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
#serial: /dev/serial/by-id/usb-katapult_stm32f446xx_2A003A001550535556323420-if00
#restart_method: command
canbus_uuid: 5ac2ea7b79b7


#####################################################################
# DUPLICATE PIN OVERRIDE
#####################################################################

[duplicate_pin_override]
pins: PF6, PF5

#####################################################################
# Octopus Pro v1 Temperature Display
#####################################################################

[temperature_sensor Octopus_Pro]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#####################################################################
# X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 64
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
endstop_pin: EBBCan:gpio24
position_min: 0
position_endstop: 355
position_max: 355
homing_speed: 75   #Max 100
homing_retract_dist: 5
homing_positive_dir: true
# high_precision_step_compress: True

[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 1.2
sense_resistor: 0.110
# stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 64
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
position_endstop: 358
position_max: 358
homing_speed: 75  #Max 100
homing_retract_dist: 5
homing_positive_dir: true
# high_precision_step_compress: True

[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 1.2
sense_resistor: 0.110
# stealthchop_threshold: 0
 
#####################################################################
# Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64
endstop_pin: probe:z_virtual_endstop
#position_endstop: -0.5
position_max: 310
position_min: -1.0
homing_speed: 8
second_homing_speed: 2
homing_retract_dist: 0 # cartographer needs this to be set to 0 (default is 5)

[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 1.0
sense_resistor: 0.110
#stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 1.0
sense_resistor: 0.110
#stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 1.0
sense_resistor: 0.110
#stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 1.0
sense_resistor: 0.110
#stealthchop_threshold: 999999

#####################################################################
# Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
#[extruder]
#step_pin: PE2
#dir_pin: PE3
#enable_pin: !PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
#gear_ratio: 50:8
#microsteps: 32
#full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
#nozzle_diameter: 0.400
#filament_diameter: 1.75

## Octopus PRO 1.0 and Octopus 1.0 & 1.1
#heater_pin: PA2

## Octopus PRO 1.1
#heater_pin: PA0

## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#sensor_type: Generic 3950 ## PT1000
#sensor_pin: PF4
#min_temp: 10
#max_temp: 270
#max_power: 1.0
#min_extrude_temp: 185
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721

#pressure_advance: 0.05  ##  Try to keep pressure_advance below 1.0
#pressure_advance_smooth_time: 0.040  ##  Default is 0.040, leave stock


#[tmc2209 extruder]
#uart_pin: PE1
#interpolate: false
#run_current: 0.5
#sense_resistor: 0.110
#stealthchop_threshold: 0


#####################################################################
# Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA1
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.75
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 44.040
#pid_ki: 2.241
#pid_kd: 216.348

#####################################################################
# Active Chamber Heater
#####################################################################

## Chamber Heater - HE1 Connector (Optional)
#[heater_generic heater_chamber]
#heater_pin: PA3
#sensor_type: BME280
#i2c_address: 119
#i2c_mcu: mcu
#i2c_software_scl_pin: PB8
#i2c_software_sda_pin: PB9
#i2c_speed: 100000

##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
#max_power: 0.75
#min_temp: 0
#max_temp: 150
#gcode_id: Chamber

#####################################################################
# Temperature Sensors
#####################################################################

[temperature_sensor chamber]
sensor_type: AHT10  #  Also use AHT10 for AHT20 and AHT21 sensors.
i2c_address: 56      # Default is 56 (0x38). Some AHT10 sensors give the option to use 57 (0x39) by moving a resistor.
i2c_mcu: mcu
i2c_software_scl_pin: PB8
i2c_software_sda_pin: PB9
#i2c_bus: i2c1a
min_temp: 0
max_temp: 150
aht10_report_time: 15    #Interval in seconds between readings. Default is 30, minimum is 5
gcode_id: Chamber

[gcode_macro QUERY_CHAMBER]
description: Info from the sensor
gcode:
    {% set sensor = printer['aht10 chamber'] %}
    {action_respond_info(
        "Temperature: %.2f C\n"
        "Humidity: %.2f%%\n" % (
            sensor.temperature,
            sensor.humidity))}


# [temperature_sensor chamber]
# sensor_type: BME280
# i2c_address: 119
# i2c_mcu: mcu
# i2c_software_scl_pin: PB8
# i2c_software_sda_pin: PB9
# i2c_speed: 100000
# #sensor_type: Generic 3950
# #sensor_pin: PF5
# min_temp: 0
# max_temp: 150
# gcode_id: Chamber

# [gcode_macro QUERY_CHAMBER]
# description: Info from the BME280\680 sensor
# gcode:
#     {% set sensor = printer['bme280 chamber'] %}
#     {action_respond_info(
#         "Temperature: %.2f C\n"
#         "Pressure: %.2f hPa\n"
#         "Humidity: %.2f%%\n"
#         "Gas Level: %.2f VOC" % (
#             sensor.temperature,
#             sensor.pressure,
#             sensor.humidity,
#             sensor.gas_level))}

# [temperature_sensor electronics_bay]
# sensor_type: Generic 3950
# sensor_pin: PF6
# min_temp: 0
# max_temp: 100
# gcode_id: Electronics

#####################################################################
# Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
#[fan]
#pin: PA8
#kick_start_time: 0.5


##  Hotend Fan - FAN1
#[heater_fan heatbreak_cooling_fan]
#pin: PE5
#max_power: 1.0
#kick_start_time: 0.5
#heater: extruder
#heater_temp: 50.0
#fan_speed: 1.0

##  Controller fan - FAN2
[controller_fan controller_fan]
pin: PD12
fan_speed: 1.0
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 0.5
stepper: stepper_z, stepper_x, stepper_y 

##  Exhaust fan - FAN3
[temperature_fan exhaust_fan]
pin: PD13
sensor_type: AHT10  #  Also use AHT10 for AHT20 and AHT21 sensors.
i2c_address: 56      # Default is 56 (0x38). Some AHT10 sensors give the option to use 57 (0x39) by moving a resistor.
i2c_mcu: mcu
i2c_software_scl_pin: PB8
i2c_software_sda_pin: PB9
#sensor_pin: PF5
#sensor_type: Generic 3950
control: watermark
max_delta: 2
max_power: 1.0
shutdown_speed: 0.0
min_temp: 0
max_temp: 100
target_temp: 40
kick_start_time: 0.5

# [temperature_fan electronics_fan_1]
# pin: PD14
# sensor_pin: PF6
# sensor_type: Generic 3950
# control: watermark
# max_delta: 2
# max_power: 1.0
# shutdown_speed: 0.0
# min_temp: 0
# max_temp: 100
# target_temp: 28

# [temperature_fan electronics_fan_2]
# pin: PD15
# sensor_pin: PF6
# sensor_type: Generic 3950
# control: watermark
# max_delta: 2
# max_power: 1.0
# shutdown_speed: 0.0
# min_temp: 0
# max_temp: 100
# target_temp: 28

[fan_generic chamber_air_scrubber_1]
pin: PA8
max_power: 1.0
kick_start_time: 1.0

[fan_generic chamber_air_scrubber_2]
pin: PE5
max_power: 1.0
kick_start_time: 1.0

#####################################################################
# LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
[output_pin caselight]
pin: PB10
shutdown_value: 0
value:1
#pwm:true
#cycle_time: 0.01


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
# Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------


##  RepRapDiscount 128x64 Full Graphic Smart Controller
#[display]
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------


##  mini12864 LCD Display
#[display]
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

##  To control Neopixel RGB in mini12864 display
#[neopixel btt_mini12864]
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------
