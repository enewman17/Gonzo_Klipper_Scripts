#####################################################################
# PAUSE
#####################################################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
description: Pauses the current print.
  Usage: PAUSE [X=<pos>] [Y=<pos>] [Z=<pos>] [E=<retract_length>] [B=<beeps>]
gcode:
  SAVE_GCODE_STATE NAME=_PAUSE_OVERRIDE_STATE
  {% set mvar = printer["gcode_macro _MACRO_VARIABLES"] %}
  {% set vars = printer['gcode_macro _MMU_CLIENT_VARS'] %}
  
  # Retract length (negative)
  {% set E = (params.E|default(5))|float %}

  {% if printer.pause_resume.is_paused %}
    MMU_LOG MSG="Print is already paused"
    {action_respond_info("Print already paused")}
  {% elif printer.idle_timeout.state | string == "Printing" or (printer.virtual_sdcard|default({})).is_active|default(False) %}
    {% if printer.mmu.enabled %}
      _MMU_SAVE_POSITION
    {% endif %}
    {% set position = printer.gcode_move.gcode_position %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_x VALUE={position.x}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_y VALUE={position.y}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_z VALUE={position.z}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_e VALUE={E}
    BASE_PAUSE
    M83
    {% if printer.extruder.can_extrude %}
      G1 E{'%.4f' % -E} F{mvar.load_speed}
    {% endif %}
    
    {% if printer.mmu.enabled %}
      {vars.user_pause_extension|default("")}
    {% endif %}
  {% else %}
    { action_respond_info("Print not in progress") }
  {% endif %}

#####################################################################
# M600
#####################################################################

[gcode_macro M600]
description: Pauses the current print for filament change.
  Usage: M600 [E<pos>] [L<pos>] [R<temp>] [U<pos>] [X<pos>] [Y<pos>]
              [Z<pos>]
gcode:
  PAUSE {% for x in params|select("in", "EXYZ") %}{' '~x~'="'~params[x]~'"'}{% endfor %}
  UNLOAD_FILAMENT{% if 'U' in params %} LENGTH={params.U} {% endif%}
  {% if 'R' in params %}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={params.R}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.R - 5} MAXIMUM={params.R + 5}
  {% endif %}

#####################################################################
# M24
#####################################################################

[gcode_macro M24]
rename_existing: M24.1
gcode:
  {% if printer.pause_resume.is_paused %}
  RESUME
  {% else %}
  M24.1
  {% endif %}

#####################################################################
# M25
#####################################################################

[gcode_macro M25]
rename_existing: M25.1
gcode:
  PAUSE

#####################################################################
# RESUME
#####################################################################

[gcode_macro RESUME]
rename_existing: BASE_RESUME
description: Resumes the currently paused print.
  Usage: RESUME [E<pos>]
variable_saved_extruder_temp: 0
variable_saved_x: 0.0
variable_saved_y: 0.0
variable_saved_z: 0.0
variable_saved_e: 0.0
gcode:
  {% if printer.pause_resume.is_paused %}
    {% set mvar = printer["gcode_macro _MACRO_VARIABLES"] %}
    {% set vars = printer['gcode_macro _MMU_CLIENT_VARS'] %}
  
    {% if printer.mmu.enabled %}
      {vars.user_resume_extension|default("")}
        {% if not printer.mmu.enabled %}
          MMU_RESTORE_POSITION	# This will take the correct "over and down" movement path and unretract
        {% endif %}
    {% else %}  
      # Heat the extruder if needed.
      {% set extruder = printer[printer.toolhead.extruder] %}
      {% if extruder.target <= printer.configfile.settings[printer.toolhead.extruder].min_temp|float + 0.5 %}
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={saved_extruder_temp}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={saved_extruder_temp - 5} MAXIMUM={saved_extruder_temp + 5}
      {% endif %}

      # If there's no saved_e assume we're completing a filament change and
      # retract enough to avoid drooling on the model.
      {% if 'E' not in params and not saved_e %}
        {% set saved_e = 1.0 %}
        G1 E{'%.4f' % -saved_e } F{mvar.load_speed}
      {% endif %}

      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_extruder_temp VALUE={0}
      G90
      # Move back to last position before unretracting.
      G1 X{saved_x} Y{saved_y} F{mvar.travel_spd_xy * 0.5}
      G1 Z{saved_z} F{mvar.travel_spd_z}
      G91
      # Unretract
      G1 E{'%.4f' % (params.E|default(saved_e))} F{mvar.load_speed}
      RESTORE_GCODE_STATE NAME=_PAUSE_OVERRIDE_STATE MOVE=1
    {% endif %} 
    BASE_RESUME
  {% else %}
    MMU_LOG MSG="Print is not paused. Resume ignored"
    {action_respond_info("Printer is not paused.")}
  {% endif %}

#####################################################################
# CANCEL_PRINT
#####################################################################

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
description: Cancels the current print.
  Usage: CANCEL_PRINT
gcode:
  {% set vars = printer['gcode_macro _MMU_CLIENT_VARS'] %}
  {% set reset_ttg_on_cancel = vars.reset_ttg_on_cancel|default('true')|lower == 'true' %}
  {% set unload_tool_on_cancel = vars.unload_tool_on_cancel|default('false')|lower == 'true' %}

  {% if printer.mmu.enabled %}
    MMU_LOG MSG="Print cancelled!"
    {% if not printer.mmu.enabled %}
      _MMU_PARK OPERATION="cancel"
    {% else %}
      {% if unload_tool_on_cancel %}
        MMU_LOG MSG="Ejecting filament on print cancel"
        MMU_UNLOAD RESTORE=0
      {% endif %}
      {% if reset_ttg_on_cancel %}
        MMU_TTG_MAP RESET=1 QUIET=1
      {% endif %}
      PRINT_END
      _MMU_CLEAR_POSITION
    {% endif %}
    TURN_OFF_HEATERS
    M107 ; Fan off
    {vars.user_cancel_extension|default("")}
  {% else %}
    _CHECK_IS_PRINTING
    PRINT_END
    BASE_CANCEL_PRINT
    {% if printer.pause_resume.is_paused %}
      RESTORE_GCODE_STATE NAME=_PAUSE_OVERRIDE_STATE MOVE=0
    {% endif %}
    CLEAR_PAUSE
    {% if 'virtual_sdcard' in printer and not printer.virtual_sdcard.is_active %}
      SDCARD_RESET_FILE
    {% endif %}
  {% endif %}

#####################################################################
# CLEAR_PAUSE
#####################################################################

[gcode_macro CLEAR_PAUSE]
rename_existing: _CLEAR_PAUSE
description: Clears the current pause state.
  Usage: CLEAR_PAUSE

gcode:
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_e VALUE={0.0}
  SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=saved_extruder_temp VALUE={0}
  _CLEAR_PAUSE
