# Inspired by https://github.com/VoronDesign/VoronUsers/blob/master/orphaned_mods/printer_mods/edwardyeeks/Decontaminator_Purge_Bucket_%26_Nozzle_Scrubber/Macros/nozzle_scrub.cfg
###########################################################################################################################################

# A Nozzle Purge and Wipe that is similar to how the Bambu Labs P1P, P1S, X1C starts.
# Nozzle Wipe Only to clean the tip before or possibly during a print, filament changes, etc...

# This sample config assumes the following: The user has implemented the default decontaminator purge bucket & a nozzle cleaning mod
# for the VORON 2/Trident. It can be tweaked to customised purge bucket geometries in MACRO_VARIABLES.cfg

# Bucket and nozzle cleaning device can be put (Front, Back, Left, or Right). You will have to note the absolute position of the bucket
# and scrubber. 

# Default parameters are set for safe speeds and movements. You may tweak the parameters for the nozzle scrub procedure to fit your printer.


###########################################################################################################################################
# PURGE AND WIPE
###########################################################################################################################################

[gcode_macro PURGE_AND_WIPE]
description: Purge some filament and wipe the nozzle
  Usage: PURGE_AND_WIPE [EXTRUDER_TEMP=<temp>] [PURGE_LENGTH=<mm>]

variable_saved_extruder_temp: {}

gcode:
  {% if mvar.park_toolhead_position == "BLOBIFIER" %}
    BLOBIFIER
  {% else %}
    {% if printer.toolhead.homed_axes != 'xyz' %}
      HOMEING_PROMPT_PURGE
  	{% endif %}
    # Save gcode state
    SAVE_GCODE_STATE NAME=_PURGE_WIPE_NOZZLE
    # Set variables
    {% set mvar = printer["gcode_macro _MACRO_VARIABLES"] %}

    # Save the hotend temperature
    {% if printer.extruder.can_extrude %}
      {% set saved_extruder_temp = printer.extruder.target|int %}
    {% endif %}
  
    G90        ; Set Motion System to Absolute Positioning
    M83        ; Set Extruder to Relative mode
    G92 E0     ; Reset Extruder
    M107       ; Turn off part cooling Fan
    
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(mvar.purge_temp)|float %}
    {% set PURGE_LENGTH = params.PURGE_LENGTH|default(mvar.purge_length|float) %}
  
    # Park toolhead over bucket
    PARK_TOOLHEAD
  
    STATUS_HEATING  ; Set SB-leds
    {% if printer.extruder.can_extrude and printer.extruder.temperature < mvar.purge_temp_min %}    
      RESPOND MSG='{"Setting \"%s\" temperature to pruge minimum  %3.1f\u00B0C," % (printer.toolhead.extruder|upper, mvar.purge_temp_min)}'
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={mvar.purge_temp_min|int}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={mvar.purge_temp_min|int}
    {% else %}
      RESPOND MSG='{"Setting \"%s\" temperature to %3.1f\u00B0C," % (printer.toolhead.extruder|upper, EXTRUDER_TEMP)}'
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP - mvar.temp_delta} MAXIMUM={EXTRUDER_TEMP + mvar.temp_delta}
    {% endif %}


    # Purge
    {% if mvar.mmu is true %}
      MMU_SERVO POS=UP
    {% endif %}
    {% set duration = PURGE_LENGTH / mvar.purge_feedrate %} 
    {% set purge_feedrate = mvar.raise_z / duration %} 
    STATUS_CLEANING ; Set SB-leds
    G1 Z0.2
    G91
    M83
    G1 Z+{mvar.raise_z} E{PURGE_LENGTH} F{purge_feedrate}
    G1 E-{mvar.purge_retraction * 2} F{mvar.purge_feedrate * 2} ; Double retraction and retract quickly
    G1 E{mvar.purge_retraction} F{mvar.purge_feedrate * 0.45} ; Slowly prime nozzle back to set retraction distance.
    {% if mvar.mmu is true %}
      MMU_SERVO POS=DOWN
    {% endif %}

    STATUS_COOLING  ; Set SB-leds
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={mvar.wipe_temp_min}  ; Sets hotend temp for wipe without waiting
   
    # Wiggle toolhead before wipe
    #{% set w = mvar.bucket_start_x + (mvar.wiper_x / 2) %}
    {% for wiggle in range(6) %}
      G91 # Relative Positioning
      G1 F20000
      G1 X+4
      G1 X-4
    {% endfor %}
    G90 # Absolute Positioning
    M83 # E Relative
    G92 E0 # Relative position of Extruder Reset to Zero
    M106 S255
    G4 P5000
  
     # Wipe
    {% if mvar.wiper_y_max is true %}
      {% set position_y = printer.toolhead.axis_maximum.y %}
    {% else %}
      {% set position_y = mvar.wiper_y %}
    {% endif %}

    {% if mvar.style == "A1"  or "BRUSH" %}
      STATUS_CLEANING  ; Set SB-leds 
      {% set move_right = mvar.wiper_x + mvar.wipe_travel %}
      {% set move_left = mvar.wiper_x - mvar.wipe_travel %}  
      {% set xii = (mvar.wipe_travel / 2 )|round(0, 'ceil')|int %}
      {% if xii % 2 == 1 %}
        {% set xix = (xii + 1)|int %}
      {% else %}
        {% set xix = xii|int %}
      {% endif %}
    
      G1 Z{mvar.wiper_top} F{mvar.travel_spd_z} ; Lower Z

      {% for wipes in range(mvar.slow_wipes) %}
        G1 X{move_left} F{mvar.wipe_spd_xy}
        G1 X{move_right} F{mvar.wipe_spd_xy / 2}
      {% endfor %}

      {% for wipes in range(mvar.wipe_qty) %}
        G1 F{mvar.wipe_spd_xy}  ; Set the feedrate
        #Increasing X sequence
        {% for i in range(1, xix) %}
          {% set x = mvar.wiper_x + 2 * i %}
          {% if i % 2 == 1 %}
            {% set y = position_y - mvar.jog_y %}
          {% else %}
            {% set y = position_y %}
          {% endif %}
          G1 X{x} Y{y}
        {% endfor %}
        # Decreasing X sequence
        {% for i in range(1, xix) %}
          {% set x = mvar.wiper_x - 2 * i %}
          {% if i % 2 == 1 %}
            {% set y = position_y %}
          {% else %}
            {% set y = position_y - mvar.jog_y %}
          {% endif %}
          G1 X{x} Y{y}
        {% endfor %}
      {% endfor %}
      {% for wipes in range(mvar.slow_wipes) %}
        G1 X{move_left} F{mvar.wipe_spd_xy}
        G1 X{move_right} F{mvar.wipe_spd_xy / 2}
      {% endfor %}
    {% else %} 
      {% if mvar.style == "P1X1" %}
        STATUS_CLEANING  ; Set SB-leds
        {% set move_right = mvar.wiper_x + mvar.wipe_travel %}
        {% set move_left = mvar.wiper_x - mvar.wipe_travel %}
        G1 Z{mvar.wiper_top} F{mvar.travel_spd_z} ; Lower Z
        {% for wipes in range(1, mvar.slow_wipes) %}
          G1 F{mvar.wipe_spd_xy / 2}
          G1 X{move_left}
          G1 X{move_right}
        {% endfor %}
        {% for wipes in range(mvar.wipe_qty) %}
          G1 F{mvar.wipe_spd_xy}
          G1 X{move_left}
          G1 X{move_right}
        {% endfor %}
      {% endif %}
    {% endif %}
  {% endif %} 
  # Done
  SET_DISPLAY_TEXT MSG="Wipe Function Complete"
  G1 Z{mvar.wiper_top + mvar.clearance_z} F{mvar.travel_speed_z}
  G1 X{mvar.bucket_start_x + (mvar.wiper_x / 2)} F{mvar.wipe_accel} ; Move nozzle to center of the main bucket side
  
  RESTORE_GCODE_STATE NAME=_PURGE_WIPE_NOZZLE
  #RESTORE_GCODE_STATE NAME=_PURGE_WIPE_NOZZLE MOVE=1 MOVE_SPEED=500   ; Uncomment if you want the toolhead returned to the position before the wipe
  
  # Was the hotend on before running this macro?
  {% if saved_extruder_temp %}
    STATUS_HEATING  ; Set SB-leds
    RESPOND MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C," % (printer.toolhead.extruder|upper, saved_extruder_temp)}'
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={saved_extruder_temp}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={saved_extruder_temp - mvar.temp_delta} MAXIMUM={saved_extruder_temp + mvar.temp_delta}
    STATUS_READY  ; Set SB-leds
  {% else %}
    STATUS_READY  ; Set SB-leds
    RESPOND MSG='{"Heater Off"}'
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  {% endif %}
  

###########################################################################################################################################
# WIPE NOZZLE ONLY
###########################################################################################################################################

[gcode_macro WIPE_NOZZLE]
description: Wipe the nozzle

gcode:

  {% if printer.toolhead.homed_axes != 'xyz' %}
    HOMEING_PROMPT_WIPE
		#{action_raise_error("Must home axes first.")}
	{% endif %}
    
  # Save the gcode state in this macro instance.
  SAVE_GCODE_STATE NAME=_WIPE_NOZZLE

  G90        ; Set Motion System to Absolute Positioning

  {% set mvar = printer["gcode_macro _MACRO_VARIABLES"] %}
  
  PARK_TOOLHEAD
  
  # Wipe
  {% if mvar.wiper_y_max is true %}
    {% set position_y = printer.toolhead.axis_maximum.y %}
  {% else %}
    {% set position_y = mvar.wiper_y %}
  {% endif %}

  {% if mvar.style == "A1"  or "BRUSH" %}
    STATUS_CLEANING  ; Set SB-leds 
    {% set move_right = mvar.wiper_x + mvar.wipe_travel %}
    {% set move_left = mvar.wiper_x - mvar.wipe_travel %}  
    {% set xii = (mvar.wipe_travel / 2 )|round(0, 'ceil')|int %}
    {% if xii % 2 == 1 %}
      {% set xix = (xii + 1)|int %}
    {% else %}
      {% set xix = xii|int %}
    {% endif %}
    
    G1 Z{mvar.wiper_top} F{mvar.travel_spd_z} ; Lower Z

    {% for wipes in range(mvar.slow_wipes) %}
      G1 X{move_left} F{mvar.wipe_spd_xy}
      G1 X{move_right} F{mvar.wipe_spd_xy / 2}
    {% endfor %}

    {% for wipes in range(mvar.wipe_qty) %}
      G1 F{mvar.wipe_spd_xy}  ; Set the feedrate
      #Increasing X sequence
      {% for i in range(1, xix) %}
        {% set x = mvar.wiper_x + 2 * i %}
        {% if i % 2 == 1 %}
          {% set y = position_y - mvar.jog_y %}
        {% else %}
          {% set y = position_y %}
        {% endif %}
        G1 X{x} Y{y}
      {% endfor %}
      # Decreasing X sequence
      {% for i in range(1, xix) %}
        {% set x = mvar.wiper_x - 2 * i %}
        {% if i % 2 == 1 %}
          {% set y = position_y %}
        {% else %}
          {% set y = position_y - mvar.jog_y %}
        {% endif %}
        G1 X{x} Y{y}
      {% endfor %}
    {% endfor %}
    {% for wipes in range(mvar.slow_wipes) %}
      G1 X{move_left} F{mvar.wipe_spd_xy}
      G1 X{move_right} F{mvar.wipe_spd_xy / 2}
    {% endfor %}
  {% else %} 
    {% if mvar.style == "P1X1" %}
      STATUS_CLEANING  ; Set SB-leds
      {% set move_right = mvar.wiper_x + mvar.wipe_travel %}
      {% set move_left = mvar.wiper_x - mvar.wipe_travel %}
      G1 Z{mvar.wiper_top} F{mvar.travel_spd_z} ; Lower Z
      {% for wipes in range(1, mvar.slow_wipes) %}
        G1 F{mvar.wipe_spd_xy / 2}
        G1 X{move_left}
        G1 X{move_right}
      {% endfor %}
      {% for wipes in range(mvar.wipe_qty) %}
        G1 F{mvar.wipe_spd_xy}
        G1 X{move_left}
        G1 X{move_right}
      {% endfor %}
    {% endif %}
  {% endif %} 
  
  SET_DISPLAY_TEXT MSG="Wipe Function Complete"
  # Park toolhead over bucket
  PARK_TOOLHEAD

  # Restore the gcode state to how it was before the macro.
  #RESTORE_GCODE_STATE NAME=_WIPE_NOZZLE
  RESTORE_GCODE_STATE NAME=_WIPE_NOZZLE MOVE=1 MOVE_SPEED=500   ; Uncomment if you want the toolhead returned to the position before the wipe





###########################################################################################################################################
# Prompts
###########################################################################################################################################




[gcode_macro HOMEING_PROMPT_PURGE]
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Axes Homing Error"
  RESPOND TYPE=command MSG="action:prompt_text Attention: Printer axes are not homed. Would you like to home axes?"
  RESPOND TYPE=command MSG="action:prompt_footer_button Home_Axes|HOME_PURGE"
  RESPOND TYPE=command MSG="action:prompt_footer_button Cancel|RESPOND TYPE=command MSG="action:prompt_end""
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro HOME_PURGE]
gcode:
  RESPOND TYPE=command MSG="action:prompt_end"
  STATUS_HOMING   ; Sets SB-leds to homing-mode
  G28
  M400
  STATUS_READY
  PURGE_AND_WIPE

[gcode_macro HOMEING_PROMPT_WIPE]
gcode:
  RESPOND TYPE=command MSG="action:prompt_begin Axes Homing Error"
  RESPOND TYPE=command MSG="action:prompt_text Attention: Printer axes are not homed. Would you like to home axes?"
  RESPOND TYPE=command MSG="action:prompt_footer_button Home_Axes|HOME_WIPE"
  RESPOND TYPE=command MSG="action:prompt_footer_button Cancel|RESPOND TYPE=command MSG="action:prompt_end""
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro HOME_WIPE]
gcode:
  RESPOND TYPE=command MSG="action:prompt_end"
  STATUS_HOMING   ; Sets SB-leds to homing-mode
  G28
  M400
  STATUS_READY
  WIPE_NOZZLE
